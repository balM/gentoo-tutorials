GENTOO LINUX MINIMAL SCREENCASTING
==================================

[ UPDATED TO FFMPEG : 1.2.4 ]

If you regularly screencast in full-screen mode then a quick and easy script based approach to starting and stopping ffmpeg makes a lot of sense.
Here's just one very simple method to do this.

I'm using ffmpeg rather than libav (avconv) - this is just a matter of choice.


INSTALL FOCUS
-------------
Start screencasting by pressing Alt+F1 keys. 
Stop screencasting by pressing Alt+F2 keys. 
Optimise the resultant mp4 screencast for flash streaming (qt-faststart)

INSTALLATION OVERVIEW
---------------------
A. Install the necessary software.
B. Create a simple script to start screencasting.
C. Create a simple script to stop screencasting.
D. Make the scripts executable.
E. Create necessary screencasting support directories.
F. Download the screencasting system tray icon.
G. Copy scripts to a local bin location.
H. Add screencasting keybindings to Openbox.
I. logout and back in.
J. Setup recording of internal audio.
K. Check screencast's qt-faststart optimisation.


MINIMAL SCREENCASTING
---------------------

A. Install the necessary software

  gnome-extra/zenity 
  media-video/atomicparsley
  media-video/ffmpeg


B. Create a simple script to start screencasting

  # cd /$HOME/Documents
  # wget https://raw.github.com/ashnbclarke/gentoo-tutorials/master/apps/ffmpeg/screencast-start.sh
  # nano screencast-start.sh (review: edit variables)
  ----------
  #!/bin/bash

  # MINIMAL FFMPEG SCREENCASTING START

  # variables below

  DATE=`date +%s`
  OUTPUT="$HOME/Videos/Screencasts"
  ICON="$HOME/.icons/screencasting.png"
  SIZE="1920x1080"
  RATE="30"

  # script below

  zenity --title="FFMPEG" --question --text="Begin Screencasting?" 

  # pause!
  sleep 1s

  # check audio output!
  if [ "cat /proc/asound/card*/pcm*/sub*/status | grep state | cut -c8-14" == "RUNNING" ]; then
    # record video and audio
    ffmpeg -f alsa -ac 2 -i pulse -f x11grab -s $SIZE -r $RATE -i :0.0 -movflags faststart -crf 20 -y "$OUTPUT/$DATE.mp4" | zenity --notification --window-icon="$ICON"
  else
    # record video only
    ffmpeg -f x11grab -s $SIZE -r $RATE -i :0.0 -movflags faststart -crf 20 -y "$OUTPUT/$DATE.mp4" | zenity --notification --window-icon="$ICON"
  fi

  # pause!
  sleep 1s

  # open thunar to show video
  thunar "$OUTPUT"
  ----------


C. Create a simple script to stop screencasting

  # cd /$HOME/Documents
  # wget https://raw.github.com/ashnbclarke/gentoo-tutorials/master/apps/ffmpeg/screencast-stop.sh
  # nano screencast-stop.sh (review:only)
  ----------
  #!/bin/bash

  # MINIMAL SCREENCASTING STOP

  killall -INT -w ffmpeg
  ----------
  
  
D. Make the scripts executable

  # chmod +x screencast-start.sh screencast-stop.sh


E. Create necessary screencasting support directories

  # mkdir $HOME/Videos/Screencasts
  # mkdir $HOME/.icons


F. Download the screencasting system tray icon

  # cd $HOME/.icons
  # wget https://raw.github.com/ashnbclarke/gentoo-tutorials/master/apps/ffmpeg/screencasting.png


G. Copy scripts to a local bin location

  # sudo cp screencast-start.sh screencast-stop.sh /usr/local/bin


H. Add screencasting keybindings to Openbox

  # nano $HOME/.config/openbox/rc.xml
  ----------
  <keyboard>
    <!-- screencasting keybinds -->
    <keybind key="A-F1"><action name="Execute"><command>screencast-start.sh</command></action></keybind>
    <keybind key="A-F2"><action name="Execute"><command>screencast-stop.sh</command></action></keybind>
  </keyboard>
  ----------


I. logout and back in


J. Setup recording of internal audio

  J1. Play some audio in the background
  # exaile mymusic.mp3
  
  J2. Open pulseaudio's mixer control panel from a terminal
  # pavucontrol

  J3. Press the Alt+F1 keys to start screencasting

  J4. With the music playing in the background

  * Choose "Recording" Tab in pavucontrol

  Set ALSA plug-in [ffmpeg] : ALSA Capture from = [ Monitor of Built-in Analog Stereo ]

  J5. Stop screencasting by pressing Alt+F2 keys

  J6. Close pavucontrol


K. Check screencast's qt-faststart optimisation

  # AtomicParsley screencast.mp4 -T | sed -n 2p | grep -q "moov" && echo "Optimised" || echo "Unoptimised"



  Completed screencasts can be uploaded to YouTube with minimal google-side conversion.
